// podriamos usar las ── y │ como paredes
// che, recomiendo que cuando cada uno actualice su codigo, ponga sus ideas que aun no puso y explique algunas partes
#include <stdio.h>
#include <time.h>
#include <stdlib.h>
#include <string.h>
void bienvenida(char nombre[20]){
    while(1){
        puts("Bienvenido jugador. Ingrese su nombre: ");
        scanf("%s", nombre);
        system("clear");
        break;
    }
}
void rellenarMazmorras(char dungeon1[15][15], char dungeon2[20][20], char dungeon3[30][30], int dificultad){
    srand(time(NULL));
    int r;
    for(int i = 0; i < 15; i++){
        for(int j = 0; j < 15; j++){
            r = rand() % 10;
            if(r > dificultad){
            dungeon1[i][j] = '*';
            }
            else{
               dungeon1[i][j] = (rand() % 1) + 1;  
            }
//aca, lo que hice es que de acuerdo a la dificultad, aparecen mas o menos enemigos. A estos los asigne como 1 y 2
//no me acuerdo si en una matriz de char, pueden aparecer int
//Todavia no le puse generacion procedural
        }
    }
    for(int i = 0; i < 20; i++){
        for(int j = 0; j < 20; j++){
           r = rand() % 10;
            if(r > dificultad){
            dungeon2[i][j] = '*';
            }
            else{
               dungeon2[i][j] = (rand() % 1) + 1;  
            }
        }
    }
    for(int i = 0; i < 30; i++){
        for(int j = 0; j < 30; j++){
             r = rand() % 10;
            if(r > dificultad){
            dungeon3[i][j] = '*';
            }
            else{
               dungeon3[i][j] = (rand() % 1) + 1;  
            }
        }
    }
}
int main(int argc, char *argv[]) {
    char mazmorra1[15][15];
    char mazmorra2[20][20];
    char mazmorra3[30][30];
    char *controles;
    int opcion;
    char nombre[20];
  puts("┌──────────────────────────────────────┐");
    puts("│           Juego de Mazmorra           │ "); // Texto mas grande
    puts("└───────────────────────────────────────┘");
    bienvenida(nombre);
     puts("  Menu:");
    puts("  1. Jugar");
    puts("  2. Reglas");
    puts("  3. Controles");
    puts("  4. Enemigos");
    puts("  5. Items");
    puts("  6. Salir");
    scanf("%d", &opcion);
    switch(opcion){
        case 1:
        /*funcion jugar*/;
        break;
        case 2:
        system("clear");
      puts("┌────────────────────────────────┐");
      puts("│    Reglas del juego:           │");
      puts("├────────────────────────────────┤");
      puts("│- Tenes que llegar hasta        │");
      puts("│  la mazmorra 3 y vencer al     │");
      puts("│  jefe.                         │");
      puts("│                                │");
      puts("│- En cada mazmorra              │");
      puts("│  habran enemigos que           │");
      puts("│  trataran de matarte           │");
      puts("│                                │");
      puts("│- Tambien habran                │");
      puts("│  objetos que mejoraran tus     │");
      puts("│  tus capacidades, como la      │");
      puts("│  vida o la fuerza              │");
      puts("└────────────────────────────────┘");
      puts("Presiona Enter para salir");
      getchar();
       break; 
     case 3: 
      system("clear");
             puts("        ┌─────┐               w: moverte hacia arriba");
             puts("        │  w  │");
             puts("        └─────┘               a: moverte hacia la izquierda");
     puts("┌─────┐ ┌─────┐  ┌─────┐"); 
     puts("│  a  │ │  s  │  │  d  │      s: moverte hacia abajo");
     puts("└─────┘ └─────┘  └─────┘");
     
             puts("                              d: moverte hacia la derecha");
     break;
     case 4: 
      system("clear");
      puts("1: Tiene x cantidad de vida. Te quita x cantidad de vida");
      puts("2: Tiene x cantidad de vida. Te quita x cantidad de vida");
      break;
    case 5:
    system("clear");
    puts("3: te da un aumento de vida de x cantidad");
    puts("4: te da un aumento de vida de x cantidad");
    break;
    case 6:
    system("clear");
    puts("Saliendo...");
    break;
    default:
    puts("Opcion invalida");
    break;
}

return 0;
}
    
