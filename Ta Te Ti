#include <stdio.h>
#define RED     "\x1b[31m"
#define BLUE    "\x1b[34m"
#define RESET   "\x1b[0m"
//se define el include junto a los define que nos permiten utilizar colores a traves del codigo ANSI
int main() {
   int fila1, columna1;
   int fila2, columna2;
   puts("Partida de ta te ti");
   char ttt[3][3];
//Se definen las variables fila1 y columna1 (jugador 1), fila2 y columna2 (jugador2),y la matriz que equivale al tablero
   for(int i = 0; i < 3; i++){
       for(int j = 0; j < 3; j++){
           ttt[i][j] = '*';
           printf("%c ", ttt[i][j]);
       }
       printf("\n");
   }
//el for imprime la matriz con puros *
   while(ttt[0][0] == '*' || ttt[0][1] == '*' || ttt[0][2] == '*' || ttt[1][0] == '*' || ttt[1][1] == '*' || ttt[1][2] == '*' || ttt[2][0] == '*' || ttt[2][1] == '*' || ttt[2][2] == '*'){
   puts("Turno jugador 1 (X). Elija fila y columna:");
   scanf("%d %d", &fila1, &columna1);
//mientras que al menos una casilla valga * los jugadores tendran turnos para definir su posicion
   if(fila1 > 2 || columna1 > 2){
       puts("Numero invalido");
       return 0;
   }
//si el valor de una de las dos variables es mayor a 2, se lo toma como invalido
   if(ttt[fila1][columna1] == 'O' || ttt[fila1][columna1] == 'X'){
       puts("Casilla ocupada");
       puts("Vuelva a elegir");
       int FI1, FC1;
       scanf("%d %d", &FI1, &FC1);
       if(FI1 > 2 || FC1 > 2){
       puts("Numero invalido");
       return 0;
   }
       ttt[FI1][FC1] = 'X';
   }
   else{
   ttt[fila1][columna1] = 'X';
   }
    for(int i = 0; i < 3; i++){
       for(int j = 0; j < 3; j++){
           if(ttt[i][j] == 'X'){
           printf(RED "%c " RESET, ttt[i][j]);
           }
           else if(ttt[i][j] == 'O'){
           printf(BLUE "%c " RESET, ttt[i][j]);
       }
       else{
           printf("%c ",ttt[i][j]);
       }
       }
       printf("\n");
   }
//en el turno del jugador1, si este elige una casilla ocupada, se lo notificara y podra volver a elegir. Si no es el caso, la casilla elegida valdra X
   puts("Turno jugador 2 (O). Elija fila y columna:");
   scanf("%d %d", &fila2, &columna2);
    if(fila2 > 2 || columna2 > 2){
       puts("Numero invalido");
       return 0;
   }
    if(ttt[fila2][columna2] == 'X' || ttt[fila2][columna2] == 'O'){
        puts("Casilla ocupada");
       puts("Vuelva a elegir");
       int FI2, FC2;
       scanf("%d %d", &FI2, &FC2);
       if(FI2 > 2 || FC2 > 2){
       puts("Numero invalido");
       return 0;
   }
       ttt[FI2][FC2] = 'O';
   }
   else{
   ttt[fila2][columna2] = 'O';
   }
    for(int i = 0; i < 3; i++){
       for(int j = 0; j < 3; j++){
           if(ttt[i][j] == 'X'){
           printf(RED "%c " RESET, ttt[i][j]);
           }
           else if(ttt[i][j] == 'O'){
           printf(BLUE "%c " RESET, ttt[i][j]);
       }
       else{
           printf("%c ",ttt[i][j]);
       }
       }
       printf("\n");
   }
//en el turno del jugador2, si este elige una casilla ocupada, se lo notificara y podra volver a elegir. Si no es el caso, la casilla elegida valdra O
 
//se imprime la matriz actualizada y el color de X es rojo y el de O es azul
   if((ttt[0][0] == 'X' && ttt[1][1] == 'X' && ttt[2][2] == 'X') || (ttt[1][0] == 'X' && ttt[1][1] == 'X' && ttt[1][2] == 'X') ||(ttt[0][0] == 'X' && ttt[0][1] == 'X' && ttt[0][2] == 'X') || (ttt[2][0] == 'X' && ttt[2][1] == 'X' && ttt[2][2] == 'X') || (ttt[0][0] == 'X' && ttt[1][0] == 'X' && ttt[2][0] == 'X') ||(ttt[0][1] == 'X' && ttt[1][1] == 'X' && ttt[2][1] == 'X') ||(ttt[0][2] == 'X' && ttt[1][2] == 'X' && ttt[2][2] == 'X') ||(ttt[0][2] == 'X' && ttt[1][1] == 'X' && ttt[2][0] == 'X')){
       puts("Gano el jugador 1");
       return 0;
   }
   if((ttt[0][0] == 'O' && ttt[1][1] == 'O' && ttt[2][2] == 'O') || (ttt[1][0] == 'O' && ttt[1][1] == 'O' && ttt[1][2] == 'O') ||(ttt[0][0] == 'O' && ttt[0][1] == 'O' && ttt[0][2] == 'O') || (ttt[2][0] == 'O' && ttt[2][1] == 'O' && ttt[2][2] == 'O') || (ttt[0][0] == 'O' && ttt[1][0] == 'O' && ttt[2][0] == 'O') ||(ttt[0][1] == 'O' && ttt[1][1] == 'O' && ttt[2][1] == 'O') ||(ttt[0][2] == 'O' && ttt[1][2] == 'O' && ttt[2][2] == 'O') ||(ttt[0][2] == 'O' && ttt[1][1] == 'O' && ttt[2][0] == 'O')){
       puts("Gano el jugador 2");
       return 0;
   }
//si uno de los dos consigue ganar, se lo avisa y termina el codigo
   }
   return 0;

}
